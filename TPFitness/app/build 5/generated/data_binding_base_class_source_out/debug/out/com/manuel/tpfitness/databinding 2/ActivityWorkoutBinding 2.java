// Generated by view binder compiler. Do not edit!
package com.manuel.tpfitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputLayout;
import com.manuel.tpfitness.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWorkoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnMuscleGroups;

  @NonNull
  public final AppCompatButton btnSave;

  @NonNull
  public final ConstraintLayout consLayoutUp;

  @NonNull
  public final AppCompatEditText etDescriptionWorkout;

  @NonNull
  public final AppCompatEditText etWorkoutName;

  @NonNull
  public final ImageButton iBtnBack;

  @NonNull
  public final BottomNavigationView myBottomNavigation;

  @NonNull
  public final TextInputLayout tilDescriptionWorkout;

  @NonNull
  public final TextInputLayout tilWorkoutName;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvEdit;

  @NonNull
  public final TextView tvWorkout;

  private ActivityWorkoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnMuscleGroups, @NonNull AppCompatButton btnSave,
      @NonNull ConstraintLayout consLayoutUp, @NonNull AppCompatEditText etDescriptionWorkout,
      @NonNull AppCompatEditText etWorkoutName, @NonNull ImageButton iBtnBack,
      @NonNull BottomNavigationView myBottomNavigation,
      @NonNull TextInputLayout tilDescriptionWorkout, @NonNull TextInputLayout tilWorkoutName,
      @NonNull TextView tvDescription, @NonNull TextView tvEdit, @NonNull TextView tvWorkout) {
    this.rootView = rootView;
    this.btnMuscleGroups = btnMuscleGroups;
    this.btnSave = btnSave;
    this.consLayoutUp = consLayoutUp;
    this.etDescriptionWorkout = etDescriptionWorkout;
    this.etWorkoutName = etWorkoutName;
    this.iBtnBack = iBtnBack;
    this.myBottomNavigation = myBottomNavigation;
    this.tilDescriptionWorkout = tilDescriptionWorkout;
    this.tilWorkoutName = tilWorkoutName;
    this.tvDescription = tvDescription;
    this.tvEdit = tvEdit;
    this.tvWorkout = tvWorkout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWorkoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWorkoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_workout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWorkoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMuscleGroups;
      AppCompatButton btnMuscleGroups = ViewBindings.findChildViewById(rootView, id);
      if (btnMuscleGroups == null) {
        break missingId;
      }

      id = R.id.btnSave;
      AppCompatButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.consLayoutUp;
      ConstraintLayout consLayoutUp = ViewBindings.findChildViewById(rootView, id);
      if (consLayoutUp == null) {
        break missingId;
      }

      id = R.id.etDescriptionWorkout;
      AppCompatEditText etDescriptionWorkout = ViewBindings.findChildViewById(rootView, id);
      if (etDescriptionWorkout == null) {
        break missingId;
      }

      id = R.id.etWorkoutName;
      AppCompatEditText etWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (etWorkoutName == null) {
        break missingId;
      }

      id = R.id.iBtnBack;
      ImageButton iBtnBack = ViewBindings.findChildViewById(rootView, id);
      if (iBtnBack == null) {
        break missingId;
      }

      id = R.id.myBottomNavigation;
      BottomNavigationView myBottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (myBottomNavigation == null) {
        break missingId;
      }

      id = R.id.tilDescriptionWorkout;
      TextInputLayout tilDescriptionWorkout = ViewBindings.findChildViewById(rootView, id);
      if (tilDescriptionWorkout == null) {
        break missingId;
      }

      id = R.id.tilWorkoutName;
      TextInputLayout tilWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (tilWorkoutName == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvEdit;
      TextView tvEdit = ViewBindings.findChildViewById(rootView, id);
      if (tvEdit == null) {
        break missingId;
      }

      id = R.id.tv_workout;
      TextView tvWorkout = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkout == null) {
        break missingId;
      }

      return new ActivityWorkoutBinding((ConstraintLayout) rootView, btnMuscleGroups, btnSave,
          consLayoutUp, etDescriptionWorkout, etWorkoutName, iBtnBack, myBottomNavigation,
          tilDescriptionWorkout, tilWorkoutName, tvDescription, tvEdit, tvWorkout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
