// Generated by view binder compiler. Do not edit!
package com.manuel.tpfitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.manuel.tpfitness.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CheckBox cbAbs;

  @NonNull
  public final CheckBox cbArms;

  @NonNull
  public final CheckBox cbBack;

  @NonNull
  public final CheckBox cbChest;

  @NonNull
  public final CheckBox cbLegs;

  @NonNull
  public final CheckBox cbShoulders;

  @NonNull
  public final TextView tvMuscleGroup;

  private LayoutBottomSheetBinding(@NonNull LinearLayoutCompat rootView, @NonNull CheckBox cbAbs,
      @NonNull CheckBox cbArms, @NonNull CheckBox cbBack, @NonNull CheckBox cbChest,
      @NonNull CheckBox cbLegs, @NonNull CheckBox cbShoulders, @NonNull TextView tvMuscleGroup) {
    this.rootView = rootView;
    this.cbAbs = cbAbs;
    this.cbArms = cbArms;
    this.cbBack = cbBack;
    this.cbChest = cbChest;
    this.cbLegs = cbLegs;
    this.cbShoulders = cbShoulders;
    this.tvMuscleGroup = tvMuscleGroup;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbAbs;
      CheckBox cbAbs = ViewBindings.findChildViewById(rootView, id);
      if (cbAbs == null) {
        break missingId;
      }

      id = R.id.cbArms;
      CheckBox cbArms = ViewBindings.findChildViewById(rootView, id);
      if (cbArms == null) {
        break missingId;
      }

      id = R.id.cbBack;
      CheckBox cbBack = ViewBindings.findChildViewById(rootView, id);
      if (cbBack == null) {
        break missingId;
      }

      id = R.id.cbChest;
      CheckBox cbChest = ViewBindings.findChildViewById(rootView, id);
      if (cbChest == null) {
        break missingId;
      }

      id = R.id.cbLegs;
      CheckBox cbLegs = ViewBindings.findChildViewById(rootView, id);
      if (cbLegs == null) {
        break missingId;
      }

      id = R.id.cbShoulders;
      CheckBox cbShoulders = ViewBindings.findChildViewById(rootView, id);
      if (cbShoulders == null) {
        break missingId;
      }

      id = R.id.tvMuscleGroup;
      TextView tvMuscleGroup = ViewBindings.findChildViewById(rootView, id);
      if (tvMuscleGroup == null) {
        break missingId;
      }

      return new LayoutBottomSheetBinding((LinearLayoutCompat) rootView, cbAbs, cbArms, cbBack,
          cbChest, cbLegs, cbShoulders, tvMuscleGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
